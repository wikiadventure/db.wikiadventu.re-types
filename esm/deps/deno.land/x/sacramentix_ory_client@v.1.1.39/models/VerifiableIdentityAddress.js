/**
 * Ory APIs
 * Documentation for all public and administrative Ory APIs. Administrative APIs can only be accessed with a valid Personal Access Token. Public APIs are mostly used in browsers.
 *
 * OpenAPI spec version: v1.1.39
 * Contact: support@ory.sh
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
* VerifiableAddress is an identity\'s verifiable address
*/
class VerifiableIdentityAddress {
    static getAttributeTypeMap() {
        return VerifiableIdentityAddress.attributeTypeMap;
    }
    constructor() {
        /**
        * When this entry was created
        */
        Object.defineProperty(this, 'created_at', {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /**
        * The ID
        */
        Object.defineProperty(this, 'id', {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /**
        * VerifiableAddressStatus must not exceed 16 characters as that is the limitation in the SQL Schema
        */
        Object.defineProperty(this, 'status', {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /**
        * When this entry was last updated
        */
        Object.defineProperty(this, 'updated_at', {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /**
        * The address value  example foo@user.com
        */
        Object.defineProperty(this, 'value', {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /**
        * Indicates if the address has already been verified
        */
        Object.defineProperty(this, 'verified', {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        Object.defineProperty(this, 'verified_at', {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /**
        * VerifiableAddressType must not exceed 16 characters as that is the limitation in the SQL Schema
        */
        Object.defineProperty(this, 'via', {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
    }
}
Object.defineProperty(VerifiableIdentityAddress, "discriminator", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: undefined
});
Object.defineProperty(VerifiableIdentityAddress, "attributeTypeMap", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: [
        {
            "name": "created_at",
            "baseName": "created_at",
            "type": "Date",
            "format": "date-time"
        },
        {
            "name": "id",
            "baseName": "id",
            "type": "string",
            "format": "uuid"
        },
        {
            "name": "status",
            "baseName": "status",
            "type": "string",
            "format": ""
        },
        {
            "name": "updated_at",
            "baseName": "updated_at",
            "type": "Date",
            "format": "date-time"
        },
        {
            "name": "value",
            "baseName": "value",
            "type": "string",
            "format": ""
        },
        {
            "name": "verified",
            "baseName": "verified",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "verified_at",
            "baseName": "verified_at",
            "type": "Date",
            "format": "date-time"
        },
        {
            "name": "via",
            "baseName": "via",
            "type": "string",
            "format": ""
        }
    ]
});
export { VerifiableIdentityAddress };
