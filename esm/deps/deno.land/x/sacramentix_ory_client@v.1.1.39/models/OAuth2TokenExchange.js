/**
 * Ory APIs
 * Documentation for all public and administrative Ory APIs. Administrative APIs can only be accessed with a valid Personal Access Token. Public APIs are mostly used in browsers.
 *
 * OpenAPI spec version: v1.1.39
 * Contact: support@ory.sh
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
* OAuth2 Token Exchange Result
*/
class OAuth2TokenExchange {
    /**
    * The access token issued by the authorization server.
    */
    'access_token';
    /**
    * The lifetime in seconds of the access token. For example, the value \"3600\" denotes that the access token will expire in one hour from the time the response was generated.
    */
    'expires_in';
    /**
    * To retrieve a refresh token request the id_token scope.
    */
    'id_token';
    /**
    * The refresh token, which can be used to obtain new access tokens. To retrieve it add the scope \"offline\" to your access token request.
    */
    'refresh_token';
    /**
    * The scope of the access token
    */
    'scope';
    /**
    * The type of the token issued
    */
    'token_type';
    static discriminator = undefined;
    static attributeTypeMap = [
        {
            "name": "access_token",
            "baseName": "access_token",
            "type": "string",
            "format": ""
        },
        {
            "name": "expires_in",
            "baseName": "expires_in",
            "type": "number",
            "format": "int64"
        },
        {
            "name": "id_token",
            "baseName": "id_token",
            "type": "number",
            "format": "int64"
        },
        {
            "name": "refresh_token",
            "baseName": "refresh_token",
            "type": "string",
            "format": ""
        },
        {
            "name": "scope",
            "baseName": "scope",
            "type": "string",
            "format": ""
        },
        {
            "name": "token_type",
            "baseName": "token_type",
            "type": "string",
            "format": ""
        }
    ];
    static getAttributeTypeMap() {
        return OAuth2TokenExchange.attributeTypeMap;
    }
    constructor() {
    }
}
export { OAuth2TokenExchange };
