/**
 * Ory APIs
 * Documentation for all public and administrative Ory APIs. Administrative APIs can only be accessed with a valid Personal Access Token. Public APIs are mostly used in browsers.
 *
 * OpenAPI spec version: v1.1.39
 * Contact: support@ory.sh
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
class UiNodeScriptAttributes {
    static getAttributeTypeMap() {
        return UiNodeScriptAttributes.attributeTypeMap;
    }
    constructor() {
        /**
        * The script async type
        */
        Object.defineProperty(this, 'async', {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /**
        * The script cross origin policy
        */
        Object.defineProperty(this, 'crossorigin', {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /**
        * A unique identifier
        */
        Object.defineProperty(this, 'id', {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /**
        * The script\'s integrity hash
        */
        Object.defineProperty(this, 'integrity', {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /**
        * NodeType represents this node\'s types. It is a mirror of `node.type` and is primarily used to allow compatibility with OpenAPI 3.0. In this struct it technically always is \"script\".
        */
        Object.defineProperty(this, 'node_type', {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /**
        * Nonce for CSP  A nonce you may want to use to improve your Content Security Policy. You do not have to use this value but if you want to improve your CSP policies you may use it. You can also choose to use your own nonce value!
        */
        Object.defineProperty(this, 'nonce', {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /**
        * The script referrer policy
        */
        Object.defineProperty(this, 'referrerpolicy', {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /**
        * The script source
        */
        Object.defineProperty(this, 'src', {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /**
        * The script MIME type
        */
        Object.defineProperty(this, 'type', {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
    }
}
Object.defineProperty(UiNodeScriptAttributes, "discriminator", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: undefined
});
Object.defineProperty(UiNodeScriptAttributes, "attributeTypeMap", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: [
        {
            "name": "async",
            "baseName": "async",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "crossorigin",
            "baseName": "crossorigin",
            "type": "string",
            "format": ""
        },
        {
            "name": "id",
            "baseName": "id",
            "type": "string",
            "format": ""
        },
        {
            "name": "integrity",
            "baseName": "integrity",
            "type": "string",
            "format": ""
        },
        {
            "name": "node_type",
            "baseName": "node_type",
            "type": "string",
            "format": ""
        },
        {
            "name": "nonce",
            "baseName": "nonce",
            "type": "string",
            "format": ""
        },
        {
            "name": "referrerpolicy",
            "baseName": "referrerpolicy",
            "type": "string",
            "format": ""
        },
        {
            "name": "src",
            "baseName": "src",
            "type": "string",
            "format": ""
        },
        {
            "name": "type",
            "baseName": "type",
            "type": "string",
            "format": ""
        }
    ]
});
export { UiNodeScriptAttributes };
