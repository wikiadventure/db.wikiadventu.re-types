/**
 * Ory APIs
 * Documentation for all public and administrative Ory APIs. Administrative APIs can only be accessed with a valid Personal Access Token. Public APIs are mostly used in browsers.
 *
 * OpenAPI spec version: v1.1.39
 * Contact: support@ory.sh
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
class NormalizedProjectRevisionThirdPartyProvider {
    static getAttributeTypeMap() {
        return NormalizedProjectRevisionThirdPartyProvider.attributeTypeMap;
    }
    constructor() {
        Object.defineProperty(this, 'apple_private_key', {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /**
        * Apple Private Key Identifier  Sign In with Apple Private Key Identifier needed for generating a JWT token for client secret
        */
        Object.defineProperty(this, 'apple_private_key_id', {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /**
        * Apple Developer Team ID  Apple Developer Team ID needed for generating a JWT token for client secret
        */
        Object.defineProperty(this, 'apple_team_id', {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /**
        * AuthURL is the authorize url, typically something like: https://example.org/oauth2/auth Should only be used when the OAuth2 / OpenID Connect server is not supporting OpenID Connect Discovery and when `provider` is set to `generic`.
        */
        Object.defineProperty(this, 'auth_url', {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /**
        * Tenant is the Azure AD Tenant to use for authentication, and must be set when `provider` is set to `microsoft`.  Can be either `common`, `organizations`, `consumers` for a multitenant application or a specific tenant like `8eaef023-2b34-4da1-9baa-8bc8c9d6a490` or `contoso.onmicrosoft.com`.
        */
        Object.defineProperty(this, 'azure_tenant', {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /**
        * ClientID is the application\'s Client ID.
        */
        Object.defineProperty(this, 'client_id', {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        Object.defineProperty(this, 'client_secret', {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /**
        * The Project\'s Revision Creation Date
        */
        Object.defineProperty(this, 'created_at', {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        Object.defineProperty(this, 'id', {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /**
        * IssuerURL is the OpenID Connect Server URL. You can leave this empty if `provider` is not set to `generic`. If set, neither `auth_url` nor `token_url` are required.
        */
        Object.defineProperty(this, 'issuer_url', {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /**
        * Label represents an optional label which can be used in the UI generation.
        */
        Object.defineProperty(this, 'label', {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /**
        * Mapper specifies the JSONNet code snippet which uses the OpenID Connect Provider\'s data (e.g. GitHub or Google profile information) to hydrate the identity\'s data.  It can be either a URL (file://, http(s)://, base64://) or an inline JSONNet code snippet.
        */
        Object.defineProperty(this, 'mapper_url', {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /**
        * The Revision\'s ID this schema belongs to
        */
        Object.defineProperty(this, 'project_revision_id', {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /**
        * Provider is either \"generic\" for a generic OAuth 2.0 / OpenID Connect Provider or one of: generic google github gitlab microsoft discord slack facebook vk yandex apple
        */
        Object.defineProperty(this, 'provider', {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /**
        * ID is the provider\'s ID
        */
        Object.defineProperty(this, 'provider_id', {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        Object.defineProperty(this, 'requested_claims', {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        Object.defineProperty(this, 'scope', {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /**
        * State indicates the state of the provider  Only providers with state `enabled` will be used for authentication enabled ThirdPartyProviderStateEnabled disabled ThirdPartyProviderStateDisabled
        */
        Object.defineProperty(this, 'state', {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        Object.defineProperty(this, 'subject_source', {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /**
        * TokenURL is the token url, typically something like: https://example.org/oauth2/token  Should only be used when the OAuth2 / OpenID Connect server is not supporting OpenID Connect Discovery and when `provider` is set to `generic`.
        */
        Object.defineProperty(this, 'token_url', {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /**
        * Last Time Project\'s Revision was Updated
        */
        Object.defineProperty(this, 'updated_at', {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
    }
}
Object.defineProperty(NormalizedProjectRevisionThirdPartyProvider, "discriminator", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: undefined
});
Object.defineProperty(NormalizedProjectRevisionThirdPartyProvider, "attributeTypeMap", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: [
        {
            "name": "apple_private_key",
            "baseName": "apple_private_key",
            "type": "string",
            "format": ""
        },
        {
            "name": "apple_private_key_id",
            "baseName": "apple_private_key_id",
            "type": "string",
            "format": ""
        },
        {
            "name": "apple_team_id",
            "baseName": "apple_team_id",
            "type": "string",
            "format": ""
        },
        {
            "name": "auth_url",
            "baseName": "auth_url",
            "type": "string",
            "format": ""
        },
        {
            "name": "azure_tenant",
            "baseName": "azure_tenant",
            "type": "string",
            "format": ""
        },
        {
            "name": "client_id",
            "baseName": "client_id",
            "type": "string",
            "format": ""
        },
        {
            "name": "client_secret",
            "baseName": "client_secret",
            "type": "string",
            "format": ""
        },
        {
            "name": "created_at",
            "baseName": "created_at",
            "type": "Date",
            "format": "date-time"
        },
        {
            "name": "id",
            "baseName": "id",
            "type": "string",
            "format": "uuid"
        },
        {
            "name": "issuer_url",
            "baseName": "issuer_url",
            "type": "string",
            "format": ""
        },
        {
            "name": "label",
            "baseName": "label",
            "type": "string",
            "format": ""
        },
        {
            "name": "mapper_url",
            "baseName": "mapper_url",
            "type": "string",
            "format": ""
        },
        {
            "name": "project_revision_id",
            "baseName": "project_revision_id",
            "type": "string",
            "format": "uuid"
        },
        {
            "name": "provider",
            "baseName": "provider",
            "type": "string",
            "format": ""
        },
        {
            "name": "provider_id",
            "baseName": "provider_id",
            "type": "string",
            "format": ""
        },
        {
            "name": "requested_claims",
            "baseName": "requested_claims",
            "type": "any",
            "format": ""
        },
        {
            "name": "scope",
            "baseName": "scope",
            "type": "Array<string>",
            "format": ""
        },
        {
            "name": "state",
            "baseName": "state",
            "type": "NormalizedProjectRevisionThirdPartyProviderStateEnum",
            "format": ""
        },
        {
            "name": "subject_source",
            "baseName": "subject_source",
            "type": "string",
            "format": ""
        },
        {
            "name": "token_url",
            "baseName": "token_url",
            "type": "string",
            "format": ""
        },
        {
            "name": "updated_at",
            "baseName": "updated_at",
            "type": "Date",
            "format": "date-time"
        }
    ]
});
export { NormalizedProjectRevisionThirdPartyProvider };
