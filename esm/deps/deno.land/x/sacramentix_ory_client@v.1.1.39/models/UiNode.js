/**
 * Ory APIs
 * Documentation for all public and administrative Ory APIs. Administrative APIs can only be accessed with a valid Personal Access Token. Public APIs are mostly used in browsers.
 *
 * OpenAPI spec version: v1.1.39
 * Contact: support@ory.sh
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
* Nodes are represented as HTML elements or their native UI equivalents. For example, a node can be an `<img>` tag, or an `<input element>` but also `some plain text`.
*/
class UiNode {
    static getAttributeTypeMap() {
        return UiNode.attributeTypeMap;
    }
    constructor() {
        Object.defineProperty(this, 'attributes', {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /**
        * Group specifies which group (e.g. password authenticator) this node belongs to. default DefaultGroup password PasswordGroup oidc OpenIDConnectGroup profile ProfileGroup link LinkGroup code CodeGroup totp TOTPGroup lookup_secret LookupGroup webauthn WebAuthnGroup
        */
        Object.defineProperty(this, 'group', {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        Object.defineProperty(this, 'messages', {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        Object.defineProperty(this, 'meta', {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /**
        * The node\'s type text Text input Input img Image a Anchor script Script
        */
        Object.defineProperty(this, 'type', {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
    }
}
Object.defineProperty(UiNode, "discriminator", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: undefined
});
Object.defineProperty(UiNode, "attributeTypeMap", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: [
        {
            "name": "attributes",
            "baseName": "attributes",
            "type": "UiNodeAttributes",
            "format": ""
        },
        {
            "name": "group",
            "baseName": "group",
            "type": "UiNodeGroupEnum",
            "format": ""
        },
        {
            "name": "messages",
            "baseName": "messages",
            "type": "Array<UiText>",
            "format": ""
        },
        {
            "name": "meta",
            "baseName": "meta",
            "type": "UiNodeMeta",
            "format": ""
        },
        {
            "name": "type",
            "baseName": "type",
            "type": "UiNodeTypeEnum",
            "format": ""
        }
    ]
});
export { UiNode };
