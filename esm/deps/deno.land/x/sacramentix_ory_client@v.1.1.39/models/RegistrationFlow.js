/**
 * Ory APIs
 * Documentation for all public and administrative Ory APIs. Administrative APIs can only be accessed with a valid Personal Access Token. Public APIs are mostly used in browsers.
 *
 * OpenAPI spec version: v1.1.39
 * Contact: support@ory.sh
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
class RegistrationFlow {
    'active';
    /**
    * ExpiresAt is the time (UTC) when the flow expires. If the user still wishes to log in, a new flow has to be initiated.
    */
    'expires_at';
    /**
    * ID represents the flow\'s unique ID. When performing the registration flow, this represents the id in the registration ui\'s query parameter: http://<selfservice.flows.registration.ui_url>/?flow=<id>
    */
    'id';
    /**
    * IssuedAt is the time (UTC) when the flow occurred.
    */
    'issued_at';
    'oauth2_login_challenge';
    'oauth2_login_request';
    /**
    * RequestURL is the initial URL that was requested from Ory Kratos. It can be used to forward information contained in the URL\'s path or query for example.
    */
    'request_url';
    /**
    * ReturnTo contains the requested return_to URL.
    */
    'return_to';
    /**
    * SessionTokenExchangeCode holds the secret code that the client can use to retrieve a session token after the flow has been completed. This is only set if the client has requested a session token exchange code, and if the flow is of type \"api\", and only on creating the flow.
    */
    'session_token_exchange_code';
    /**
    * TransientPayload is used to pass data from the registration to a webhook
    */
    'transient_payload';
    /**
    * The flow type can either be `api` or `browser`.
    */
    'type';
    'ui';
    static discriminator = undefined;
    static attributeTypeMap = [
        {
            "name": "active",
            "baseName": "active",
            "type": "IdentityCredentialsType",
            "format": ""
        },
        {
            "name": "expires_at",
            "baseName": "expires_at",
            "type": "Date",
            "format": "date-time"
        },
        {
            "name": "id",
            "baseName": "id",
            "type": "string",
            "format": "uuid"
        },
        {
            "name": "issued_at",
            "baseName": "issued_at",
            "type": "Date",
            "format": "date-time"
        },
        {
            "name": "oauth2_login_challenge",
            "baseName": "oauth2_login_challenge",
            "type": "string",
            "format": "uuid4"
        },
        {
            "name": "oauth2_login_request",
            "baseName": "oauth2_login_request",
            "type": "OAuth2LoginRequest",
            "format": ""
        },
        {
            "name": "request_url",
            "baseName": "request_url",
            "type": "string",
            "format": ""
        },
        {
            "name": "return_to",
            "baseName": "return_to",
            "type": "string",
            "format": ""
        },
        {
            "name": "session_token_exchange_code",
            "baseName": "session_token_exchange_code",
            "type": "string",
            "format": ""
        },
        {
            "name": "transient_payload",
            "baseName": "transient_payload",
            "type": "any",
            "format": ""
        },
        {
            "name": "type",
            "baseName": "type",
            "type": "string",
            "format": ""
        },
        {
            "name": "ui",
            "baseName": "ui",
            "type": "UiContainer",
            "format": ""
        }
    ];
    static getAttributeTypeMap() {
        return RegistrationFlow.attributeTypeMap;
    }
    constructor() {
    }
}
export { RegistrationFlow };
