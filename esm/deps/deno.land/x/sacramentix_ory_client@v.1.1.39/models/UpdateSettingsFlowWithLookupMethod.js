/**
 * Ory APIs
 * Documentation for all public and administrative Ory APIs. Administrative APIs can only be accessed with a valid Personal Access Token. Public APIs are mostly used in browsers.
 *
 * OpenAPI spec version: v1.1.39
 * Contact: support@ory.sh
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
* Update Settings Flow with Lookup Method
*/
class UpdateSettingsFlowWithLookupMethod {
    static getAttributeTypeMap() {
        return UpdateSettingsFlowWithLookupMethod.attributeTypeMap;
    }
    constructor() {
        /**
        * CSRFToken is the anti-CSRF token
        */
        Object.defineProperty(this, 'csrf_token', {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /**
        * If set to true will save the regenerated lookup secrets
        */
        Object.defineProperty(this, 'lookup_secret_confirm', {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /**
        * Disables this method if true.
        */
        Object.defineProperty(this, 'lookup_secret_disable', {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /**
        * If set to true will regenerate the lookup secrets
        */
        Object.defineProperty(this, 'lookup_secret_regenerate', {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /**
        * If set to true will reveal the lookup secrets
        */
        Object.defineProperty(this, 'lookup_secret_reveal', {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /**
        * Method  Should be set to \"lookup\" when trying to add, update, or remove a lookup pairing.
        */
        Object.defineProperty(this, 'method', {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
    }
}
Object.defineProperty(UpdateSettingsFlowWithLookupMethod, "discriminator", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: undefined
});
Object.defineProperty(UpdateSettingsFlowWithLookupMethod, "attributeTypeMap", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: [
        {
            "name": "csrf_token",
            "baseName": "csrf_token",
            "type": "string",
            "format": ""
        },
        {
            "name": "lookup_secret_confirm",
            "baseName": "lookup_secret_confirm",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "lookup_secret_disable",
            "baseName": "lookup_secret_disable",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "lookup_secret_regenerate",
            "baseName": "lookup_secret_regenerate",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "lookup_secret_reveal",
            "baseName": "lookup_secret_reveal",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "method",
            "baseName": "method",
            "type": "string",
            "format": ""
        }
    ]
});
export { UpdateSettingsFlowWithLookupMethod };
