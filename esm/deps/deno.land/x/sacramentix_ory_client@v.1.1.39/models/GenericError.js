/**
 * Ory APIs
 * Documentation for all public and administrative Ory APIs. Administrative APIs can only be accessed with a valid Personal Access Token. Public APIs are mostly used in browsers.
 *
 * OpenAPI spec version: v1.1.39
 * Contact: support@ory.sh
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
* Error responses are sent when an error (e.g. unauthorized, bad request, ...) occurred.
*/
class GenericError {
    /**
    * The status code
    */
    'code';
    /**
    * Debug information  This field is often not exposed to protect against leaking sensitive information.
    */
    'debug';
    /**
    * Further error details
    */
    'details';
    'error';
    /**
    * The error ID  Useful when trying to identify various errors in application logic.
    */
    'id';
    /**
    * Error message  The error\'s message.
    */
    'message';
    /**
    * A human-readable reason for the error
    */
    'reason';
    /**
    * The request ID  The request ID is often exposed internally in order to trace errors across service architectures. This is often a UUID.
    */
    'request';
    /**
    * The status description
    */
    'status';
    static discriminator = undefined;
    static attributeTypeMap = [
        {
            "name": "code",
            "baseName": "code",
            "type": "number",
            "format": "int64"
        },
        {
            "name": "debug",
            "baseName": "debug",
            "type": "string",
            "format": ""
        },
        {
            "name": "details",
            "baseName": "details",
            "type": "any",
            "format": ""
        },
        {
            "name": "error",
            "baseName": "error",
            "type": "GenericErrorContent",
            "format": ""
        },
        {
            "name": "id",
            "baseName": "id",
            "type": "string",
            "format": ""
        },
        {
            "name": "message",
            "baseName": "message",
            "type": "string",
            "format": ""
        },
        {
            "name": "reason",
            "baseName": "reason",
            "type": "string",
            "format": ""
        },
        {
            "name": "request",
            "baseName": "request",
            "type": "string",
            "format": ""
        },
        {
            "name": "status",
            "baseName": "status",
            "type": "string",
            "format": ""
        }
    ];
    static getAttributeTypeMap() {
        return GenericError.attributeTypeMap;
    }
    constructor() {
    }
}
export { GenericError };
